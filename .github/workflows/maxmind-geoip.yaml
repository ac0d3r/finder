name: "maxmind-geoip"

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 12 * *

jobs:
  build:
    name: Pull and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download file
        env:
          LICENSE_KEY: ${{ secrets.MAXMIND_KEY }}
        run: |
          mkdir dist
          wget -O ./GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${LICENSE_KEY}&suffix=tar.gz"
          wget -O ./GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${LICENSE_KEY}&suffix=tar.gz"
          wget -O ./GeoLite2-ASN.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${LICENSE_KEY}&suffix=tar.gz"
          tar zxvf ./GeoLite2-Country.tar.gz -C .
          tar zxvf ./GeoLite2-City.tar.gz -C .
          tar zxvf ./GeoLite2-ASN.tar.gz -C .

      - name: Create local changes
        run: |
          mkdir -p geoip
          mv ./GeoLite2-Country_*/GeoLite2-Country.mmdb geoip/Country.mmdb
          mv ./GeoLite2-City_*/GeoLite2-City.mmdb geoip/City.mmdb
          mv ./GeoLite2-ASN_*/GeoLite2-ASN.mmdb geoip/ASN.mmdb
          git fetch origin
          git checkout -b data origin/data
          git add geoip/Country.mmdb geoip/City.mmdb geoip/ASN.mmdb

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update GeoIP [$(date)] :robot:" -a --allow-empty

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: data
